generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Professor {
  id       Int       @id @default(autoincrement())
  nome     String // @db.VarChar(100)
  email    String    @unique // @db.VarChar(100)
  senha    String // @db.VarChar(255)
  questoes Questao[]
  provas   Prova[]
}

model Descritor {
  id         Int       @id @default(autoincrement())
  codigo     String //@db.VarChar(100)
  descricao  String //@db.Text
  disciplina String
  questoes   Questao[]
}

model Questao {
  id              Int              @id @default(autoincrement())
  enunciado       String // @db.Text
  alternativaA    String? // @db.VarChar(255)
  alternativaB    String? // @db.VarChar(255)
  alternativaC    String? // @db.VarChar(255)
  alternativaD    String? // @db.VarChar(255)
  alternativaE    String? // @db.VarChar(255)
  respostaCorreta String // @db.Char(1)
  explicacao      String
  publica         Boolean          @default(false)
  professorId     Int?
  descritorId     Int?
  disciplina      String
  professor       Professor?       @relation(fields: [professorId], references: [id])
  descritor       Descritor?       @relation(fields: [descritorId], references: [id])
  provas          ProvasQuestoes[]
}

model Prova {
  id          Int              @id @default(autoincrement())
  titulo      String // @db.VarChar(100)
  dataCriacao DateTime // @db.Date
  professorId Int?
  professor   Professor?       @relation(fields: [professorId], references: [id])
  questoes    ProvasQuestoes[]
}

model ProvasQuestoes {
  provaId   Int
  questaoId Int
  prova     Prova   @relation(fields: [provaId], references: [id])
  questao   Questao @relation(fields: [questaoId], references: [id])

  @@id([provaId, questaoId])
}

// enum Disciplina {
//   PORTUGUES
//   MATEMATICA
// }
